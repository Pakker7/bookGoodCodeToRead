읽기좋은코드2 - -조건문
질문을 받는 표현 왼쪽
고정적인 값 오른쪽
if는 긍정으로 넣기 else가부정으로
do while 문보단 걍 while
코드 수정시에는 중간에 그냥 넣지 말고 원 코드를 수정하라

request.response 같은 긴 함수는 변수 하나를 그냥 만들어서 넣어라 그게 이해가쉽다
설명용으로도 변수를 만들고
요약용으로도 변수를 만들라
변수갯수는 괜찮음 !!

너어무복잡하면 반대의 경우를 생각해서 조건을 다시작성해라..
코드의 핵심개념을 파악하는데 도움을 주어라

변수는 사용직전에 선언해라
한번에 모아서 선언하면뭐가뭔지모름

긴 클래스 내부에서 뽑아서 작은 클래스들 또는 메소드들로 만들어라
네이밍만잘하면 쉬운이해가 가능

한번에 한가지 일만 하도록 만들기
윗 사례처럼 클래스를 분류할 수도 있는데, 클래스 외에 클래스 내부의 변수? if 문등에서도 분류가 가능하다
방법 : 이 메소드가 하는 일을 순서대로 작성 -> 그일을 쪼개기??!!

결론
코드가 읽기어렵다?
그럼 하는일을 나열하라
나열작업중 일부는 별도함수, 클래스로 분리가능 그리고 별도의 논리적 문단으로 존재시킬수있다

순서를 말로 정리해서
코드로 만든다
코드로 만든 후 다시 순서를 본다
지저분한 코드부분은 아마 말도지저분할 것, 말을 수정하고 코드를 수정하라

매일 15분씩 자신의 표준 라이브러리에 있는 모든 함수/모듈/형 들의 이름을 읽어라, 기억했다가 필요한데 쓰게




Q.리펙토링 시간?

Q.
빠르게 작업하는 개발자 -> 젊은이에게 밀리지 않을까?
밀릴 때쯤 pm을 하려나?
내가 좀 못해도 경력이 쌓이니까 si같은건 그냥 할 수 있으려나?

하나를 깊게아는 개발자 ->
수요가 적지않을까?
아니면 진짜 잘하는 개발자가 되어야하는거... 아닐까...


아니면 빠르게 작업하는걸 배우다가 중급이면 깊게 아는개발자가 되어야할까
그걸 다하려면 맨날 공부를 해야하는 건가


웹백엔드는 무엇을 개발하는 걸까?
웹백엔드 개발자가 되려면 
중급 개발자는 무엇을 개발하는걸까?

그래서 회사일은 회사일이고
나는 나대로 깊이를 쌓아야 하는건가보다,
회사일을 잘하는거면 si로가서 빠르게 쳐내는게 나을 수도 있겠군
아닌거면 깊이있는걸.. 알아서 경력이쌓이게..?


Q. 협업을 한다는 것은?!?!
커뮤니케이션 능력
